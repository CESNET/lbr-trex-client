stages:
    - prepare
    - build
    - upload

image: $CI_PROJECT_PATH_SLUG/$CI_COMMIT_REF_SLUG

docker:
    stage: prepare
    tags: [docker-shell]
    script: [docker build -t $CI_PROJECT_PATH_SLUG/$CI_COMMIT_REF_SLUG .]

build:
    stage: build
    script:
        - python3 -m build --wheel
        - ls -l dist
    artifacts:
        paths: [dist]

upload:
    stage: upload
    script:
        - TWINE_PASSWORD=${LRB_PYPI_PASSWORD} TWINE_USERNAME=${LRB_PYPI_USERNAME}
            python3 -m twine upload --verbose --repository-url ${LBR_PYPI_REPOSITORY_URL} dist/*
    only: ['master']

upload to PyPI:
    stage: upload
    script:
        - TWINE_PASSWORD=${PYPI_PASSWORD} TWINE_USERNAME=${PYPI_USERNAME}
            python3 -m twine upload --verbose dist/*
    only:
        variables:
            - $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_TAG

variables:
    GIT_STRATEGY: clone
